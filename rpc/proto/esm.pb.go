// Code generated by protoc-gen-go. DO NOT EDIT.
// source: esm.proto

package esm

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetGuidRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGuidRequest) Reset()         { *m = GetGuidRequest{} }
func (m *GetGuidRequest) String() string { return proto.CompactTextString(m) }
func (*GetGuidRequest) ProtoMessage()    {}
func (*GetGuidRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_esm_1b1803040ff95bb3, []int{0}
}
func (m *GetGuidRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGuidRequest.Unmarshal(m, b)
}
func (m *GetGuidRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGuidRequest.Marshal(b, m, deterministic)
}
func (dst *GetGuidRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGuidRequest.Merge(dst, src)
}
func (m *GetGuidRequest) XXX_Size() int {
	return xxx_messageInfo_GetGuidRequest.Size(m)
}
func (m *GetGuidRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGuidRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetGuidRequest proto.InternalMessageInfo

type GetGuidReply struct {
	Guid                 string   `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGuidReply) Reset()         { *m = GetGuidReply{} }
func (m *GetGuidReply) String() string { return proto.CompactTextString(m) }
func (*GetGuidReply) ProtoMessage()    {}
func (*GetGuidReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_esm_1b1803040ff95bb3, []int{1}
}
func (m *GetGuidReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGuidReply.Unmarshal(m, b)
}
func (m *GetGuidReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGuidReply.Marshal(b, m, deterministic)
}
func (dst *GetGuidReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGuidReply.Merge(dst, src)
}
func (m *GetGuidReply) XXX_Size() int {
	return xxx_messageInfo_GetGuidReply.Size(m)
}
func (m *GetGuidReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGuidReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetGuidReply proto.InternalMessageInfo

func (m *GetGuidReply) GetGuid() string {
	if m != nil {
		return m.Guid
	}
	return ""
}

func init() {
	proto.RegisterType((*GetGuidRequest)(nil), "esm.GetGuidRequest")
	proto.RegisterType((*GetGuidReply)(nil), "esm.GetGuidReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EsmClient is the client API for Esm service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EsmClient interface {
	GetGuid(ctx context.Context, in *GetGuidRequest, opts ...grpc.CallOption) (*GetGuidReply, error)
}

type esmClient struct {
	cc *grpc.ClientConn
}

func NewEsmClient(cc *grpc.ClientConn) EsmClient {
	return &esmClient{cc}
}

func (c *esmClient) GetGuid(ctx context.Context, in *GetGuidRequest, opts ...grpc.CallOption) (*GetGuidReply, error) {
	out := new(GetGuidReply)
	err := c.cc.Invoke(ctx, "/esm.Esm/GetGuid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EsmServer is the server API for Esm service.
type EsmServer interface {
	GetGuid(context.Context, *GetGuidRequest) (*GetGuidReply, error)
}

func RegisterEsmServer(s *grpc.Server, srv EsmServer) {
	s.RegisterService(&_Esm_serviceDesc, srv)
}

func _Esm_GetGuid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGuidRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EsmServer).GetGuid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/esm.Esm/GetGuid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EsmServer).GetGuid(ctx, req.(*GetGuidRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Esm_serviceDesc = grpc.ServiceDesc{
	ServiceName: "esm.Esm",
	HandlerType: (*EsmServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetGuid",
			Handler:    _Esm_GetGuid_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "esm.proto",
}

func init() { proto.RegisterFile("esm.proto", fileDescriptor_esm_1b1803040ff95bb3) }

var fileDescriptor_esm_1b1803040ff95bb3 = []byte{
	// 118 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0x2d, 0xce, 0xd5,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x2d, 0xce, 0x55, 0x12, 0xe0, 0xe2, 0x73, 0x4f,
	0x2d, 0x71, 0x2f, 0xcd, 0x4c, 0x09, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x51, 0x52, 0xe2, 0xe2,
	0x81, 0x8b, 0x14, 0xe4, 0x54, 0x0a, 0x09, 0x71, 0xb1, 0xa4, 0x97, 0x66, 0xa6, 0x48, 0x30, 0x2a,
	0x30, 0x6a, 0x70, 0x06, 0x81, 0xd9, 0x46, 0x56, 0x5c, 0xcc, 0xae, 0xc5, 0xb9, 0x42, 0xc6, 0x5c,
	0xec, 0x50, 0xa5, 0x42, 0xc2, 0x7a, 0x20, 0x83, 0x51, 0x8d, 0x92, 0x12, 0x44, 0x15, 0x2c, 0xc8,
	0xa9, 0x54, 0x62, 0x48, 0x62, 0x03, 0xdb, 0x6e, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xed, 0xcc,
	0xb8, 0x94, 0x8a, 0x00, 0x00, 0x00,
}
